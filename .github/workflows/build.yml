name: Build ZMK (Charybdis 4x6 on nice!nano v2)

on:
  push:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ghcr.io にログイン（匿名 pull 失敗対策）
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # イメージ取得（リトライ付き）
      - name: Pull ZMK build image (retry)
        run: |
          for i in 1 2 3 4; do
            docker pull ghcr.io/zmkfirmware/zmk-build:stable && break
            echo "retrying in 6s... ($i/4)"; sleep 6
          done

      # コンテナ内で走らせる内容をスクリプト化（クォート地獄を回避）
      - name: Write build script
        run: |
          cat > build_inside.sh <<'EOF'
          set -e
          west init -l config
          west update
          # ★RGBなし個体なら _rgb を外してください（下に注記）
          west build -s zmk/app -d build/left  -b nice_nano_v2 -- -DSHIELD=charybdis_4x6_rgb_left
          cp build/left/zephyr/zmk.uf2  left.uf2
          west build -s zmk/app -d build/right -b nice_nano_v2 -- -DSHIELD=charybdis_4x6_rgb_right
          cp build/right/zephyr/zmk.uf2 right.uf2
          EOF
          chmod +x build_inside.sh

      # スクリプトをマウントして実行
      - name: Build in container
        run: |
          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            ghcr.io/zmkfirmware/zmk-build:stable \
            bash /work/build_inside.sh

      # 生成物をアップロード
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-uf2
          path: |
            left.uf2
            right.uf2
